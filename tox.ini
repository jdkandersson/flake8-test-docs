[tox]
skipsdist=True
envlist = lint, test, coverage-report

[vars]
src_module = {toxinidir}/flake8_test_docs
src_path = {[vars]src_module}.py
tst_path = {toxinidir}/tests/
all_path = {[vars]src_path} {[vars]tst_path}

[testenv]
allowlist_externals=python,poetry
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH

[testenv:fmt]
description = Apply coding style standards to code
deps =
    poetry
commands =
    poetry install
    poetry run isort {[vars]all_path}
    poetry run black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    poetry
commands =
    poetry install
    poetry run pydocstyle {[vars]src_path}
    poetry run codespell {toxinidir} --skip {toxinidir}/.git --skip {toxinidir}/.tox \
      --skip {toxinidir}/.venv --skip {toxinidir}/.mypy_cache
    poetry run flake8 {[vars]all_path}
    poetry run isort --check-only --diff {[vars]all_path}
    poetry run black --check --diff {[vars]all_path}
    poetry run mypy {[vars]all_path}
    poetry run pylint {[vars]all_path}
    poetry run pydocstyle {[vars]src_path}

[testenv:test]
description = Run tests
deps =
    poetry
commands =
    poetry install
    poetry run coverage run \
        -m pytest -v --tb native -s {posargs}
    poetry run coverage report

[testenv:coverage-report]
description = Create test coverage report
deps =
    poetry
commands =
    poetry install
    poetry run coverage report
